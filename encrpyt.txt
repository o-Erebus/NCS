#include <iostream>
#include <string>
using namespace std;


string encryptVigenere(string plaintext, string key) {
    string ciphertext = "";
    int keyLen = key.length();

    for (int i = 0; i < plaintext.length(); i++) {
        int p = plaintext[i] - 'A';
        int k = key[i % keyLen] - 'A';

        int c = (p + k) % 26;
        ciphertext += char(c + 'A');
    }

    return ciphertext;
}

string decryptVigenere(string ciphertext, string key) {
    string plaintext = "";
    int keyLen = key.length();

    for (int i = 0; i < ciphertext.length(); i++) {
        int c = ciphertext[i] - 'A';
        int k = key[i % keyLen] - 'A';

        int p = (c - k + 26) % 26; // +26 to avoid negative results
        plaintext += char(p + 'A');
    }

    return plaintext;
}

int main() {
    string plaintext, key;

    cout << "Enter plaintext (uppercase A-Z only): ";
    cin >> plaintext;

    cout << "Enter key (uppercase A-Z only): ";
    cin >> key;

    string encrypted = encryptVigenere(plaintext, key);
    string decrypted = decryptVigenere(encrypted, key);

    cout << "\nEncrypted ciphertext: " << encrypted << endl;
    cout << "Decrypted plaintext:  " << decrypted << endl;

    return 0;
}
